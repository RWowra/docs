<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="_Skins_HTML5_Side" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="COSYM_Online_Help.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Virtual Networks">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon_3.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_2.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_1.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon.ico" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>vNet FlexRay</title>
        <link href="../../TableStyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../TableStyles/table2.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Stylesheets/ETAS_flare_EN.css" rel="stylesheet" type="text/css" />
        <meta name="Product" content="COSYM" />
        <meta name="Version" content="V3.4.1" />
        <meta name="Revision" content="R01 EN - 05.2024" />
        <meta name="Copyright Year" content="2024" />
        <meta name="Doc Type" content="User Guide" />
        <script src="../../Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-left" role="navigation" id="offCanvas" data-off-canvas="" data-position="left" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Help.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div id="mc-main-content" role="main" data-mc-content-body="True">
                                    <h2>vNet FlexRay</h2>
                                    <p>In general to apply all vNet interfaces, the facts are explained in "vNet Basics" <a href="vNet Basics and example usage with ESSE Virtual Networks.htm" class="PageNum MCXref xref xrefPageNum">vNet Basics and example usage with  ETAS Virtual Networks</a>. This page aims at outlining the differences between the individual network types and the ESSE implementations of virtual networks. </p>
                                    <p>The header file used by VNET&#160;FlexRay: <span class="code">vNetFlexRayInterface.h</span>.</p>
                                    <h3>FlexRay Facts</h3>
                                    <ul>
                                        <li class="list">A FlexRay network requires individual configurations of all stations</li>
                                        <li class="list">Each station must be configured individually and differently</li>
                                        <li class="list">These configurations must be done in advance and may not be changed while the network is operated</li>
                                        <li class="list">The configuration of a FlexRay network requires ca. 30 parameters</li>
                                        <li class="list">Due to the complexity the configuration is often performed using special configuration tools and stored in a Fibex file</li>
                                        <li class="list">Manual configuration is difficult and error-prone because it must always be correct: No two messages may be sent at the same time, collisions are not possible and lead to bus errors</li>
                                        <li class="list">FlexRay communication happens in cycles</li>
                                        <li class="list">Each cycle has a configurable duration</li>
                                        <li class="list">The cycle duration is configured as a number of macroticks</li>
                                        <li class="list">The duration of macroticks is configurable as well</li>
                                        <li class="list">Each cycle is composed of a static segment, a dynamic segment, a smybol window and network idle time<ul><li class="list2">The static segment is composed of N static slots</li><li class="list2">The dynamic segment is composed of M minislots</li><li class="list2">Symbol window and idle time are also parts of a cycle, but not discussed here</li></ul></li>
                                        <li class="list">Both sections are used for two types of communication<ul><li class="list2">Communication in static (fixed) transmission slots with guaranteed latency (TDMA)</li><li class="list2">Communication in dynamic (variable) time slots without guaranteed latency (FTDMA)</li></ul></li>
                                        <li class="list">All slots, static and minislots, have numbers which roughly correspond to CAN frame IDs</li>
                                        <li class="list">The numbering of slots begins with static slots and continues with minislots</li>
                                        <li class="list">So in case of N static and M minislots, the slot numbers start with 1 and end with N+M</li>
                                        <li class="list">Slot numbers &lt;= N are for static slots, slot numbers &gt;N are for minislots</li>
                                        <li class="list">A message becomes automatically a dynamic message if it is configured for a slot with a number is &gt;N, so it must be a minislot</li>
                                        <li class="list">Each FlexRay network has 2 channels A and B</li>
                                        <li class="list">Both channels allow for<ul><li class="list2">double transmission capacity or</li><li class="list2">parallel transmission on both channels for the sake of fault-tolerance</li></ul></li>
                                        <li class="list">The configuration of macroticks, segments and slots is always the same for both channels A and B</li>
                                        <li class="list">Messages can be configured to be sent on both channels at the same time</li>
                                    </ul>
                                    <p class="paragraph">
                                        <img src="../../Images/vNET/vnet7.png" class="wide" />
                                    </p>
                                    <h3>Static Slots</h3>
                                    <ul>
                                        <li class="list">Each static slot defines an exclusive reserved period of time (in macroticks) in which <b>a station can send a whole message</b></li>
                                        <li class="list">Static slots are reserved, so a slot remains unused if no station is sending in that slot</li>
                                        <li class="list">Static slots may suffer from external fragmentation: If only short messages are configured for a static slot and none of them fills it to 100% transmission capacity is wasted</li>
                                        <li class="list">Each static slots can be assigned several different messages to be sent (cycle multiplexing)<ul><li class="list2">In such a case a periodicity is defined for all of the messages assigned to the same slot: a number P which can be 2, 4, 8, 16, 32 or 64</li><li class="list2">Each of the messages sharing the same static slot is assigned an exclusive offset: a number between 0 and P-1</li><li class="list2">So the transmission in such a slot is periodic and repeats every Pth FlexRay cycle<ul><li class="list2">If e. g. P=4 then 4 different messages M1, M2, M3, M4 could share the static slot</li><li class="list2">Each of them is sent every in 4th FlexRay cycle</li><li class="list2">Each of them has a different offset: 0, 1, 2, 3</li><li class="list2">The sequence is as follows (cycle #: message) 1:M1, 2:M2, 3:M3, 4:M4, 5:M1, 6:M2, 7:M3, 7:M3 and so on.</li></ul></li></ul></li>
                                    </ul>
                                    <h3>Minislots and Dynamic Slots</h3>
                                    <ul>
                                        <li class="list">Messages configured for slot numbers &gt;N are dynamic messages and will be sent in dynamic slots</li>
                                        <li class="list">Dynamic slots are sequences of minislots in which a dynamic messages is sent</li>
                                        <li class="list">Minislots define a short reserved period of time (in macroticks) in which a station can <b>begin to send a message</b></li>
                                        <li class="list">Each station may start sending a message <b>only in that minislot that was configured for the message</b></li>
                                        <li class="list">Minislots are usually shorter than static slots</li>
                                        <li class="list">Each dynamic slot is composed of a<ul><li class="list2">transmission phase which is followed by a</li><li class="list2">short dynamic slot idle phase</li><li class="list2">both phases consume a sequence of minislots</li></ul></li>
                                        <li class="list">The capacity is used more effectively by dynamic slots because only the duration of a minislot is wasted when no message is sent</li>
                                        <li class="list">Dynamic slots are suitable for event-based communication</li>
                                        <li class="list">The transmission of a messages in dynamic slot happens in <b>several subsequent minislots without preemption</b></li>
                                        <li class="list">That means: When a station begins to send a message in a minislot, it might consume <b>as many subsequent minislots as needed to transmit the complete message</b></li>
                                        <li class="list">So when the transmission has started in a minislot, all other stations must wait until it has been completed. After transmission in a dynamic slot the station with the next dynamic slot index may start sending. The dynamic slot index does not increment during additional minislots needed to complete the previously transmitted message.</li>
                                        <li>Each station which wants to start sending in a minislot must check whether the number of minislots left in the current cycle is sufficient to transmit its message</li>
                                        <li>If not, the transmission of the message must be postponed to next cycle, the dynamic slot index is incremented, and the remaining minislots may be sufficient to accommodate a message with a matching Dynamic Slot Index</li>
                                        <li>Due to these facts dynamic messages have priorities: messages configured for Dynamic Slot Indexes with lower number have a higher priority than messages configured for Dynamic Slot Indexes with high numbers</li>
                                    </ul>
                                    <h3>Schedule example</h3>
                                    <p>The following example shows a schedule containing messages M1,..., M9 configured for both, static and dynamic segments and for both channels.</p>
                                    <p>For instance, M2 and M4 are sent simultaneously on both channels.</p>
                                    <p>We assume that M6 has lost its dynamic slot and cannot be sent in this cycle. This phenomenon will be explained in the next sub-section.</p>
                                    <p class="paragraph">
                                        <img src="../../Images/vNET/vnet8.png" class="wide" />
                                    </p>
                                    <table style="width: 100%;mc-table-style: url('../../TableStyles/note.css');" class="TableStyle-note" cellspacing="0">
                                        <col class="TableStyle-note-Column-Column1" />
                                        <thead>
                                            <tr class="TableStyle-note-Head-Header1">
                                                <th class="TableStyle-note-HeadD-Column1-Header1">
                                                    <p class="note_Header" data-mc-autonum="Note"><span class="autonumber"><span>Note</span></span>&#160;</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-note-Body-Body1">
                                                <td class="TableStyle-note-BodyA-Column1-Body1">
                                                    <ul>
                                                        <li class="table_list">The waste of static slot capacity in slots 1, 2, 3: scheduled messages M1, M2, M3 do not fill the static slots.</li>
                                                        <li class="table_list">The waste of minislots.<ul><li class="table_list2">when no message was configured for a minislot.</li><li class="table_list2">when a configured message could not be sent because there are insufficient minislots remaining in the cycle.</li></ul></li>
                                                    </ul>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>Priority in Dynamic Slots</h3>
                                    <p>Note the method how dynamic slots are allocated. The following example, (for the dynamic slot transmissions shown above, shall demonstrate this:</p>
                                    <p>After sending all static messages in static slots, the transmission of the dynamic segment (15 minislots) begins.</p>
                                    <p>The following dynamic messages are scheduled to be transmitted in the dynamic segment of a FlexRay cycle:</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 89px;" class="TableStyle-table2-Column-Column1" />
                                        <col style="width: 133px;" class="TableStyle-table2-Column-Column1" />
                                        <col style="width: 107px;" class="TableStyle-table2-Column-Column1" />
                                        <col style="width: 148px;" class="TableStyle-table2-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th style="text-align: center;" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default" style="text-align: center;">Message Name</p>
                                                </th>
                                                <th style="text-align: center;" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Dynamic Slot Index</p>
                                                </th>
                                                <th style="text-align: center;" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default" style="text-align: center;">Length in Mini Slots</p>
                                                </th>
                                                <th style="text-align: center;" class="TableStyle-table2-BodyD-Column1-Body1">
                                                    <p class="table_default" style="text-align: center;">Channel for Transmission</p>
                                                </th>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">M5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">3</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1" style="text-align: center;">A</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">M6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">14</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1" style="text-align: center;">A</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">M7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">3</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1" style="text-align: center;">A</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">M8</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">7</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">3</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1" style="text-align: center;">B</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1" style="text-align: center;">6</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1" style="text-align: center;">B</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1" style="text-align: center;">M10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1" style="text-align: center;">11</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1" style="text-align: center;">3</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1" style="text-align: center;">B</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <p>The dynamically allocated minislots for channel A would be allocated as shown:</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');" class="TableStyle-table2" cellspacing="2">
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyE-Column1-Body1">Mini Slot Number</th>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">8</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">9</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">11</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">12</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">13</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">14</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">15</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">16</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">17</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">18</td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">19</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyE-Column1-Body1">Dynamic Slot Index</th>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">8</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">11</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">12</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">13</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">14</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">15</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyB-Column1-Body1">Message Name</th>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M5</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M5</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M5</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M7</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M7</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M7</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">--</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <p>M5 was transmitted in dynamic slot index 5 taking up 3 minislots for its transmission in minislots 5, 6, 7.</p>
                                    <p>Because of this the transmission of M6 could not begin in its Dyamic Slot Index 6 (minislot 8) as there were only 12 minislots remaining in the cycle, and no message was transmitted in minislot 8.</p>
                                    <p>Since M6 could not be sent, the transmission of M7 could start in minislot 9.</p>
                                    <p>The priorities of M6 and M7 are in this case inverted: Although M6 has actually a higher priority (lower dynamic slot 6), M7 was sent in the current cycle instead of M6. In a subsequent cycle, if M5 was not requested for transmission, then M6 could start in minislot 6 which would then be Dynamic slot 6 and it would consume the remaining minislots for the cycle.</p>
                                    <p class="paragraph">&#160;</p>
                                    <p>The dynamically allocated minislots for channel B would be allocated as shown:</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');" class="TableStyle-table2" cellspacing="2">
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyE-Column1-Body1">Mini Slot Number</th>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">8</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">9</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">11</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">12</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">13</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">14</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">15</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">16</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">17</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">18</td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">19</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyE-Column1-Body1">Dynamic Slot Index</th>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">5</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">6</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">7</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">8</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">9</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">10</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">11</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">12</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <th class="TableStyle-table2-BodyB-Column1-Body1">Message Name</th>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M8</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M8</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M8</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">M9</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">--</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">--</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <p>M8 was transmitted in dynamic slot index 7 taking up 3 minislots for its transmission in minislots 7, 8, 9.</p>
                                    <p>M9 was transmitted in dynamic slot index 10 taking up 6 minislots for its transmission in minislots 12, 13, 14, 15, 16, 17.</p>
                                    <p>Because of the transmissions of M8 and M9, M10 could not begin in its transmission in Dyamic Slot Index 11 (minislot 18) as there were only 2 minislots remaining in the cycle, and no message was transmitted in minislots 18 and 19.</p>
                                    <h3>ESSE Virtual FlexRay Facts</h3>
                                    <ul>
                                        <li>The ESSE virtual FlexRay implementation supports all of the configuration features mentioned above.</li>
                                        <li>Particular attention must be paid to the stepping - see the section Stepping below.</li>
                                        <li>Due to the complex configuration described below the user of configuration tools is advised.</li>
                                    </ul>
                                    <h3>ESSE FlexRay Model</h3>
                                    <p>ESS FlexRay virtual networks have a simple single-wire line topology.</p>
                                    <h5>Initialization</h5>
                                    <p>The initialization of the interface is pretty much the same as for <a href="vNet Ethernet.htm" class="Heading_only MCXref xref xrefHeading_only">vNet Ethernet</a> and <a href="vNet CAN.htm" class="Heading_only MCXref xref xrefHeading_only">VNET CAN</a>. The different symbol names to import are listed in the table <a href="vNet Basics and example usage with ESSE Virtual Networks.htm#Getting" class="MCXref xref">Getting Symbols</a>.</p>
                                    <h5>Configuration</h5>
                                    <p>The configuration of a FlexRay port is quite complex and requires a lot of parameters. The best way to have a correct configuration is to use a FlexRay configuration tool.</p>
                                    <p>Once the data is available, a global configuration for the entire network and and one local configuration for each vNet port must be created.</p>
                                    <h5>FlexRay config</h5>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: CPP;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; font-weight: bold; ">typedef</span> <span style="color: #a71d5d; ">struct</span> vNetFlexRayGlobalConfig<br /><span style="color: #000000; ">{</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// header</span><br />&#160;&#160;&#160;&#160;uint32_t mVersion<span style="color: #000000; ">;</span><br />&#160;&#160;&#160;&#160;int32_t mBusClocksPerSec<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Baud rate</span><br />&#160;&#160;&#160;&#160;int32_t mBusClocksPerMacroTick<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Macro tick rate</span><br />&#160;&#160;&#160;&#160;int32_t mMacroTicksPerStep<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// macroTicks per Step</span><br />&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// cycle</span><br />&#160;&#160;&#160;&#160;uint32_t mgMacroPerCycle<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// macroTicks per cycle</span><br />&#160;&#160;&#160;&#160;uint32_t mgSpareCycle<span style="color: #000000; ">[</span><span style="color: #df5000; ">3</span><span style="color: #000000; ">];</span><br />&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// static segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgNumberOfStaticSlots<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of static slots in static segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgdStaticSlot<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of macroTicks in each each static slot</span><br />&#160;&#160;&#160;&#160;uint32_t mgPayloadLengthStatic<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of 2 byte words of payload in each static slot</span><br />&#160;&#160;&#160;&#160;uint32_t mgSpareStatic<span style="color: #000000; ">[</span><span style="color: #df5000; ">1</span><span style="color: #000000; ">];</span><br />&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// dynamic segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgNumberOfMinislots<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of mini slots in dynamic segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgdMinislot<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of macroTicks in each mini slot</span><br />&#160;&#160;&#160;&#160;uint32_t mgdDynamicSlotIdlePhase<span style="color: #000000; ">;</span>&#160;&#160;&#160;<span style="color: #969896; ">// Number of macroTicks of idle after a dynamic slot</span><br />&#160;&#160;&#160;&#160;uint32_t mgSpareDynamic<span style="color: #000000; ">[</span><span style="color: #df5000; ">1</span><span style="color: #000000; ">];</span><br />&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// symbol segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgdSymbolWindow<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// Number of macroTicks in symbol segment</span><br />&#160;&#160;&#160;&#160;uint32_t mgSpareSymbol<span style="color: #000000; ">[</span><span style="color: #df5000; ">3</span><span style="color: #000000; ">];</span><br />&#160;<br />&#160;&#160;&#160;&#160;uint32_t reserved<span style="color: #000000; ">[</span><span style="color: #df5000; ">12</span><span style="color: #000000; ">];</span><br /><span style="color: #000000; ">}</span> vNetFlexRayGlobalConfig<span style="color: #000000; ">;</span></code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <h5>FlexRay Main configuration</h5>
                                    <p>The main configuration items are:</p>
                                    <ul>
                                        <li><i style="font-weight: bold; font-style: normal;">baud rate</i> of the entire network in bus clocks per second, e. g. 10 000 000</li>
                                        <li><b>bus clocks per macrotick</b> - the duration of a macrotick in bus clock ticks</li>
                                        <li><b>macroticks per step</b> - the number of macroticks per simulation step, together with the number of bus ticks per macrotick we can compute the overall step duration and the stepping rate</li>
                                        <li><b>macroticks per cycle</b> - defines the cycle duration in macroticks</li>
                                        <li><b>number of static slots</b> - how many static slots are in a static segment</li>
                                        <li><b>payload length static</b> - number of 2 byte words of payload in each static slot, <b>the computation of this value is tricky</b> because it is coupled with the length and number of macroticks in a static slot</li>
                                        <li><b>number of minislots</b> - the number of minislots in the dynamic segment</li>
                                        <li><b>minislot</b> - number of macroticks per minislot</li>
                                        <li><b>dynamic slot idle phase</b> - the length of the idle phase of a dynamic slot in macroticks</li>
                                        <li><b>symbol window</b> - number of macroticks in the symbol segment</li>
                                    </ul>
                                    <h5>FlexRay local configuration</h5>
                                    <p>The local configuration is shown below:</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: CPP;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; font-weight: bold; ">typedef</span> <span style="color: #a71d5d; ">struct</span> vNetFlexRayLocalConfig<br /><span style="color: #000000; ">{</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">// local config</span><br />&#160;&#160;&#160;&#160;uint32_t mpLatestTx<span style="color: #000000; ">;</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; ">// the last mini slot to start a dynamic slot</span><br />&#160;&#160;&#160;&#160;uint32_t mpSpareLocal<span style="color: #000000; ">[</span><span style="color: #df5000; ">3</span><span style="color: #000000; ">];</span><br /><span style="color: #000000; ">}</span> vNetFlexRayLocalConfig<span style="color: #000000; ">;</span></code></pre>
                                        </div>
                                    </div>
                                    <div class="CodeSnippet_wide">&#160;</div>
                                    <p>The only interesting configuration item here is latestTx. It contains the number of the latest minislot in which the transmission of a dynamic message may start. Such a value should be computed individually for each interface depending of the lengths of messages to be sent.</p>
                                    <h5>Creating Flexray Configuration</h5>
                                    <p class="paragraph">The creation of both configuration structures is straightforward provided that all data is available:</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: CPP;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>vNetFlexRayGlobalConfig flxGlobalConfig<span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mBusClocksPerSec <span style="color: #000000; ">=</span> <span style="color: #df5000; ">10000000</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mBusClocksPerMacroTick <span style="color: #000000; ">=</span> <span style="color: #df5000; ">1</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mMacroTicksPerStep <span style="color: #000000; ">=</span> <span style="color: #df5000; ">5000</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgMacroPerCycle <span style="color: #000000; ">=</span> <span style="color: #df5000; ">5000</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgNumberOfStaticSlots <span style="color: #000000; ">=</span> <span style="color: #df5000; ">91</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgdStaticSlot <span style="color: #000000; ">=</span> <span style="color: #df5000; ">24</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgPayloadLengthStatic <span style="color: #000000; ">=</span> <span style="color: #df5000; ">8</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgNumberOfMinislots <span style="color: #000000; ">=</span> <span style="color: #df5000; ">289</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgdMinislot <span style="color: #000000; ">=</span> <span style="color: #df5000; ">5</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgdDynamicSlotIdlePhase <span style="color: #000000; ">=</span> <span style="color: #df5000; ">1</span><span style="color: #000000; ">;</span><br />flxGlobalConfig<span style="color: #000000; ">.</span>mgdSymbolWindow <span style="color: #000000; ">=</span> <span style="color: #df5000; ">0</span><span style="color: #000000; ">;</span><br />&#160;<br />vNetFlexRayLocalConfig flxLocalConfig<span style="color: #000000; ">;</span><br />flxLocalConfig<span style="color: #000000; ">.</span>mpLatestTx <span style="color: #000000; ">=</span> <span style="color: #df5000; ">249</span><span style="color: #000000; ">;</span></code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <p>The configuration example is described below:</p>
                                    <ul>
                                        <li>The FlexRay network is a 10 MBit  network because of 10000000 bus clocks per second</li>
                                        <li>Each macrotick takes 1 bus clock = 100 ns</li>
                                        <li>Each simulation step takes 5000 macrotocks = 500 us = 0.5 ms so we 2000 simulation steps per second</li>
                                        <li>Each FlexRay cycle requires also 5000 macroticks</li>
                                        <li>So in the special case the length of a simulation cycle is equal to the length of a bus cycle. This is makes the understanding of the simulation easy, but is actually not required (see discussion about simulation cycles below)</li>
                                        <li>Each FlexRay cycle has 91 static slots, each of which takes 24 macroticks</li>
                                        <li>So the static segment comprises 91 * 24 = 2184 macroticks</li>
                                        <li>The payload length in each static slot is 8 * 2 = 16 bytes</li>
                                        <li>The number of minislots is 289, each of them takes 5 macroticks</li>
                                        <li>So the dynamic segment is 289 * 5 = 1445 macroticks</li>
                                        <li>The symbol window stakes 249 macroticks</li>
                                        <li>Plausibility check: 2184 + 1445 + 249 = 3878 macroticks &lt; 5000 macroticks configured for each FlexRay cycle</li>
                                    </ul>
                                    <h3>Opening FlexRay Ports</h3>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>// Choose e. g. the first interface from the list to open</p>
                                        </div>
                                        <div style="mc-code-lang: CPP;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #969896; ">// Choose e. g. the first interface from the list to open</span><br /><span style="color: #a71d5d; font-weight: bold; ">auto</span> pPortNames <span style="color: #000000; ">=</span> flxRayIface<span style="color: #000000; ">-&gt;</span><span style="color: #795da3; font-weight: bold; ">mGetAllPortNames</span><span style="color: #000000; ">();</span><br /><span style="color: #a71d5d; ">char</span><span style="color: #000000; ">*</span> portName <span style="color: #000000; ">=</span> pPortNames<span style="color: #000000; ">[</span><span style="color: #df5000; ">0</span><span style="color: #000000; ">];</span><br />&#160;<br /><span style="color: #969896; ">// retrieve a Flexray port handle</span><br />vNetFlexRayHandle<span style="color: #000000; ">*</span> pPortHandle <span style="color: #000000; ">=</span> flxRayIface<span style="color: #000000; ">-&gt;</span><span style="color: #795da3; font-weight: bold; ">mOpenPort</span><span style="color: #000000; ">(</span> portName<span style="color: #000000; ">,</span> <span style="color: #000000; ">&amp;</span>flxGlobalCfg<span style="color: #000000; ">,</span> <span style="color: #000000; ">&amp;</span>flxLocalCfg<span style="color: #000000; ">,</span> <span style="color: #000000; font-weight: bold; ">nullptr</span><span style="color: #000000; ">);</span></code></pre>
                                        </div>
                                    </div>
                                    <h3>Sending and Receiving of Messages</h3>
                                    <ul>
                                        <li class="list">The general rule that messages transmitted in simulation step N can, at the earliest, only be received in step N+1 applies also to FlexRay.</li>
                                        <li class="list">Note that regarding the communication mechanism in FlexRay we need to consider 3 points of time when we talk about simulated message transmission:<ul><li class="list2">The time when the message was sent to the FlexRay network interface - it is the <b>send request time</b></li><li class="list2">The time when the message was transmitted on the wire in the configured time slot - it is the <b>transmission time</b></li><li class="list2">The time when the message is received on the remote network interface - it is the <b>reception time</b></li></ul></li>
                                        <li class="list">Note that several FlexRay cycles may pass between the send request and the actual transmission - time interval between 1 and 2</li>
                                        <li class="list">Also note that the time interval between 2 and 3 is always 1 simulation step (as explained above)</li>
                                        <li class="list">The reason for this is explained in the next sub-section</li>
                                        <li class="list">Note also that applications do not need to respect segments and slot configurations: <b>Applications can send any messages any time to a FlexRay network interface</b></li>
                                        <li class="list"><b>It is the responsibility of the vNet network interface to store the send request and to transmit the messages as early as possible in the next possible slot</b>
                                        </li>
                                    </ul>
                                    <h3>FlexRay Cycles and Simulation Cycles</h3>
                                    <h5>Facts and Findings</h5>
                                    <ul>
                                        <li class="list">FlexRay is different with respect to the fact that messages are scheduled in certain slots during FlexRay cycles.</li>
                                        <li class="list">The global configuration data defines the length of a simulation cycle as a multiple of macroticks. <b>This means that simulation steps may never start or end in the middle of a macrotick</b>.</li>
                                        <li class="list">However, it is possible for a FlexRay cycle to comprise several simulation steps. See the example below</li>
                                        <li class="list">It is not allowed to define "large" simulation step sizes which would comprise several FlexRay cycles. This would lead to incorrect simulation results.</li>
                                        <li class="list">It is allowed for simulation steps to start and end in the middle of<ul><li class="list2">a static segment,</li><li class="list2">a dynamic segment,</li><li class="list2">a static slot and</li><li class="list2">a dynamic slot.</li></ul></li>
                                    </ul>
                                    <h5>Example Schedule</h5>
                                    <p>The figure below shows a FlexRay cycle which is covered by 3 simulation cycles.</p>
                                    <ul>
                                        <li class="list">Simulation step N covers static slots 1, 2 and a part of 3</li>
                                        <li class="list">Simulation step N+1 covers a part of slot 3, slot 4, minislots 5-9 and a part of minislot 9</li>
                                        <li class="list">Simulation step N+2 covers a part of minislot 10 and minislots 11-19</li>
                                        <li class="list">The same applies to the following simulation steps N+3, N+4 and N+5 - this schema repeats every 3rd FlexRay cycle</li>
                                    </ul>
                                    <p class="paragraph">
                                        <img src="../../Images/vNET/vnet9.png" class="wide" />
                                    </p>
                                    <p>This flexibility has a little bit surprising implications when sending and receiving messages:</p>
                                    <ul>
                                        <li class="list">A message configured for static slot 1 and sent in step N will be received in step N+1</li>
                                        <li class="list">A message configured for static slot 4 and sent in step N will be received in step N+2. This example is shown in the next figure below.</li>
                                        <li class="list">A message configured for static slot 3 and sent in step N will be received in step N+2 because slot 3 is not entirely covered by step N</li>
                                        <li class="list">A message configured for static slot 3 and sent in step N+1 will be received in step N+5 because slot 3 is not entirely covered by step N and the message has already missed its static slot in N+1</li>
                                        <li class="list">Similar restrictions apply for the reception of dynamic messages, however, this is further complicated by the aggregation of minislots into dynamic slots which depends on transmission requests for messages with higher priority dynamic indexes</li>
                                    </ul>
                                    <p>The following figure depicts how the three previously mentioned points of time are related to each other:</p>
                                    <p class="paragraph">
                                        <img src="../../Images/vNET/vnet10.png" class="wide" />
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>