define({'API':{d:'Application Programming Interface',l:''},'AR':{d:'Acronym for AUTOSAR',l:''},'ARXML':{d:'File extension for AUTOSAR XML-formatted file(s)',l:''},'ARXML files':{d:'AUTOSAR XML files',l:''},'AUTOSAR':{d:'AUTOSAR is an evolving standard, which defines modular software architecture for automotive electronic control units. It is designed to increase the ease of software re-use and the deployment on different hardware. AUTOSAR increases the ease of software integration, but in a way mandates the use of tools to effectively handle its complexity.\n(See http://www.autosar.org )',l:''},'CAN':{d:'Controller Area Network (ISO 15765), a multi-master broadcast serial bus standard\nfor connecting ECUs.',l:''},'COSYM':{d:'Co-simulation of Systems',l:''},'DLL':{d:'Dynamic Link Library',l:''},'FMI':{d:'FMI is a Functional Mockup Interface (FMI) that  provides a standardised interface to be used in computer simulations to develop complex mechatronic systems.',l:''},'FMU':{d:'Model is converted to \".fmu\" file with the help of importer. This \".fmu\" file is called as Functional Mockup Unit (FMU).',l:''},'GUI':{d:'Graphical User Interface',l:''},'GUID':{d:'GUID is a Globally Unique Identifier. It is a 128-bit integer number used to identify a model.',l:''},'HiL':{d:'Hardware in Loop: HiL refers to a simulation of a closed loop system where one part of the system is in the actual hardware/ECU while the plant is a model in the computer.',l:''},'ICE':{d:'Internal Combustion Engine',l:''},'LMD':{d:'LABCAR model Description',l:''},'Mechatronic':{d:'Mechatronics is a design process that includes a combination of mechanical engineering, electrical engineering, control engineering and computer engineering. Mechatronics is a multidisciplinary field of engineering, which means that it rejects splitting engineering into separate disciplines.',l:''},'MiL':{d:'Model in Loop: Simulation of a system where all executable blocks are in the form of models such as simulink blocks etc.',l:''},'Model':{d:'Model is a basic unit of the system which represents a domain specific component in a product.',l:''},'Native Model Or Model':{d:'Native Model or Model is a basic unit of the system which represents a domain specific component. It is a graphical representation of a mathematical equation in the form of a block diagram.',l:''},'NIC':{d:'Network Integration CAN',l:''},'NM XML':{d:'Network Module XML file',l:''},'Offline Simulation':{d:'Imitation of real world processes or systems through mathematical models in a computer where time update/increment is in complete control of the simulator process is referred to as offline simulation.',l:''},'RBS':{d:'Restbus Simulation',l:''},'Real-time Simulator':{d:'A model runs at the same rate as the actual physical system in the Real-time Simulator.',l:''},'RT Simulation':{d:'Simulation of a system where the time update/increment is controlled by the OS of the computer such that it matches real-world time is referred to as real-time simulation.',l:''},'SiL':{d:'Software in Loop: Simulation of a system where the sub-systems are in the form of software files which subsequently can be programmed on actual ECUs.',l:''},'Simulation':{d:'Simulation is the imitation of operation of real-world processes or systems\nover time in a computer using mathematical/logic/table based models.',l:''},'SIMULINK':{d:'SIMULINK is an environment for multi-domain simulation and model-based design. It supports simulation, automatic code generation, and continuous test and verification of embedded systems.',l:''},'Solver':{d:'Solver is a generic term indicating a piece of mathematical software, possibly in the form of a stand-alone computer program or as a software library that \u0027solves\u0027 a mathematical problem',l:''},'SUT':{d:'System Under Test',l:''},'Target Node':{d:'Simulation Target Node is the address of the server/machine on which the simulation is being executed. In the present version, it is the local machine or the local host.',l:''},'Tunable Parameter':{d:'A Tunable Parameter is constant between external events (ModelExchange) and Communication Points (Co-simulation) due to changing variables.\nIn other words, value of tunable parameters can be changed during simulation\nat runtime due to external events.',l:''},'UDP':{d:'User Datagram Protocol',l:''},'VECU':{d:'The ETAS Virtual ECU is an open and expandable Eclipse-based tool environment, enabling integration, configuration, and execution of the ECU software on the PC. The key function of this solution is the generation of an ETAS Virtual ECU software and configuration, with the combination of actual ECU application software. This permits a PC-based behavioral simulation of a complete ECU within a Windows and Linux environment.',l:''},'XiL':{d:'XiL refers to a kind of simulation where models can be in the form of software or hardware or plant models. This is a combination of MiL, SiL and HiL simulation types.',l:''},'XML':{d:'eXtended Markup Language',l:''}});