define({"0":{y:0,u:"../Resources/Manual/Copyright.htm",l:-1,t:"Copyright",i:0.000721626612340466,a:"The data in this document may not be altered or amended without special notification from ETAS GmbH. ETAS GmbH undertakes no further obligation in relation to this document. The software described in it can only be used if the customer is in possession of a general license agreement or single ..."},"1":{y:0,u:"../Resources/Topic/Help.htm",l:-1,t:"Help",i:0.000721626612340466,a:"       "},"2":{y:0,u:"../Resources/Topic/About/about_this_document_EN.htm",l:-1,t:"Safety and Privacy Information",i:0.000721626612340466,a:"Safety and Privacy Information Contains the following topics about this COSYM Help Manual.  Intended Use Target Group Safety Advice Classification of Safety Messages Data Protection Data and Information Security Contact Information"},"3":{y:0,u:"../Resources/Topic/About/Intended Use.htm",l:-1,t:"Intended Use",i:0.000809252969364677,a:"Intended Use COSYM is the simulation and integration platform from ETAS for testing and validating ECU software in MiL and SiL environments. Areas of application include the simulation and testing of virtual ECU networks in real and virtual time and the integration of ECU functions and SiL models."},"4":{y:0,u:"../Resources/Topic/About/Target Group.htm",l:-1,t:"Target Group",i:0.000809252969364677,a:"Target Group This manual addresses qualified personnel working in the fields of automobile control unit development and calibration. Specialized knowledge in the areas of embedded systems and simulation is required."},"5":{y:0,u:"../Resources/Topic/About/Safety Advice.htm",l:-1,t:"Safety Advice",i:0.000809252969364677,a:"Safety Advice Adhere to the ETAS Safety Advice, which is available within COSYM (Help → Safety advice). ETAS GmbH cannot be made liable for damage that is caused by incorrect use and not adhering to the safety instructions."},"6":{y:0,u:"../Resources/Manual/Classification_SafetyMessages.htm",l:-1,t:"Classification of Safety Messages",i:0.000809252969364677,a:"Classification of Safety Messages Safety messages warn of dangers that can lead to personal injury or damage to property:        "},"7":{y:0,u:"../Resources/Manual/Data Protection.htm",l:-1,t:"Data Protection",i:0.000971379265446272,a:"If the product contains functions that process personal data, legal requirements of data protection and data privacy laws shall be complied with by the customer. As the data controller, the customer usually designs subsequent processing. Therefore, he must check if the protective measures are ..."},"8":{y:0,u:"../Resources/Manual/Data Security.htm",l:-1,t:"Data and Information Security",i:0.000971379265446272,a:"To securely handle data in the context of this product, see the next sections about data and storage locations as well as technical and organizational measures. Data and Storage Locations The following sections give information about data and their respective storage locations for various use cases. ..."},"9":{y:0,u:"../Resources/Manual/Contacts.htm",l:-1,t:"Contact Information",i:0.00375633088050712,a:"Contact Information Technical Support ETAS Headquarters ETAS GmbH  "},"10":{y:0,u:"../Resources/Manual/EN/User Interface.htm",l:-1,t:"Help Topics of COSYM User Interface ",i:0.000874972737132834,a:" Contains the following help topics of COSYM User Interface.  Introduction SiL Overview Graphical User Interface Project Management Model Management Deployment Management Integration OS Configuration System Build Simulation Execution Connecting 3rd Party Tools to COSYM Simulation Visualization ..."},"11":{y:0,u:"../Resources/Topic/User_Guide/2_EC/COSYM_Overview.htm",l:-1,t:"Introduction",i:0.000762944901327736,a:"COSYM is a software tool to simulate the systems (Co-simulation of Systems) developed by ETAS GmbH.  COSYM is designed to  integrate the components, simulate the systems with soft real-time capabilities and visualize the result of discrete and continuous-time systems. COSYM offers a methodology to ..."},"12":{y:0,u:"../Resources/Topic/User_Guide/2_EC/Phases_COSYM.htm",l:-1,t:"COSYM Workflow",i:0.00589137240031443,a:"COSYM assists you right from the project creation phase until the visualization phase. An overview diagram  Fig. 1  demonstrates the simulation models and different operations which can be performed in COSYM. An Overview Project Management A project may compose of either several simulation models ..."},"13":{y:0,u:"../Resources/Topic/User_Guide/2_EC/SystemRequirements.htm",l:-1,t:"System Requirements",i:0.00768336096316474,a:"This section describes the required hardware and software components to install and run different use cases in COSYM.  Along with these prerequisites, it is necessary to have a valid license(s) as described in the \"COSYM Licenses\" section in the  COSYM_V3.4.1_Getting_Started_Guide.pdf . General The ..."},"14":{y:0,u:"../Resources/Topic/User_Guide/2_EC/LaunchCOSYM.htm",l:-1,t:"Launching COSYM",i:0.00370392927832307,a:"COSYM can be launched as follows: To launch COSYM Go to Desktop and then double-click  . \u003cOr\u003e Go to Windows icon → ETAS → ETAS COSYM and then click  COSYM V3.4.1.  Read the \"ETAS Safety Advice\" document and click Acknowledged. Splash screen is displayed as shown in the  Fig. 1 . Launching COSYM ..."},"15":{y:0,u:"../Resources/Topic/User_Guide/2_EC/Launch COSYM headless.htm",l:-1,t:"Command Line Operations",i:0.000721626612340466,a:"For the need of automation, COSYM is capable to start headless from the command line without specifying the path. With this, COSYM is called installation location independent. To use this functionality and learn more about the details, just type \"COSYM\" in a command prompt as shown below. To execute ..."},"16":{y:0,u:"../Resources/Topic/User_Guide/1_I/COSYM Demo Data.htm",l:-1,t:"COSYM Demo Data",i:0.00562886743487295,a:"The default location specified by COSYM during installation for COSYM demo data  is C:\\ETAS\\ETASData\\COSYM3.x. In case you have selected a different location for demo data, then the files\\folders in the demo data can be found in the location specified by you. The COSYM demo data location contains ..."},"17":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/SiLOverview.htm",l:-1,t:"SiL Overview",i:0.000968819793262064,a:"The  software-in-the-loop (SiL) is a testing process where a software representation of the real electronic controller unit (ECU) is used. This software representation is called virtual electronic controller (VECU). The interfaces of the plant model and rest bus simulation are connected with ..."},"18":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/ATS_VTSUsecase.htm",l:-1,t:"Introduction to ATS",i:0.0133406674320413,a:"In COSYM, software-in-the-loop (SiL) simulation uses adaptive time simulation (ATS) use case. In the adaptive time simulation, the simulation runs on a PC with Microsoft Windows operating systems. All calculations are run as fast as possible.  The synchronization is realized by the simulation based ..."},"19":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/SimulationsUnits.htm",l:-1,t:"Simulation Models",i:0.00129755066672108,a:"Simulation Models The models which are used in the SiL use case are described as follows: In SiL, you are not allowed to write values to outports in the \u0027Init\u0027 process of the C-Code model. "},"20":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/VirtualNetworks.htm",l:-1,t:"Virtual Networks",i:0.00129755066672108,a:"As a huge part of data exchange in real controller networks, realized with bus communication, it is important for software-in-the-loop simulations to simulate the communication networks. The accuracy of such a simulation can be in a range of passing the information to a detailed model of timing, ..."},"21":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/SiL_Tutorials.htm",l:-1,t:"SiL Tutorials",i:0.0056595378910713,a:"The tutorials enable a first hands-on experience of COSYM.  It demonstrates on how to integrate, configure and simulate the example simulation models (provided with the installation DVD) on Windows and visualize the result. It also offers quick links for additional explanation. Introduction to ATS ..."},"22":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Tut1.htm",l:-1,t:"Simple SiL Simulation",i:0.00230923922304662,a:"A closed-loop simulation of idle speed control of a 3-cylinder gasoline engine model is used as an example to illustrate how adaptive time simulation (ATS) can be conducted using COSYM.   In order to complete this tutorial, you will require two simulation models. Namely, Engine model Engine ..."},"23":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/SimulationCOSYM.htm",l:-1,t:"Simulation Steps for ATS use case",i:0.00188324012864084,a:"The tutorial covers the following sections to this tutorial example: Launching COSYM Creating a New Project Creating a  System Renaming a Target Mapping a Target Importing the Models Adding the Simulation Models into a System Connecting the Models Configuring OS Building a System Viewing the ..."},"24":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Launchingt.htm",l:-1,t:"Launching COSYM",i:0.00150809313574654,a:"COSYM can be launched as follows: To launch COSYM Go to Desktop and then double-click  . \u003cOr\u003e In Windows 10 systems, go to Windows icon → ETAS → ETAS COSYM and then click  COSYM V3.4.1. Launching COSYM product The splash screen is shown until the application is ready to run, then the project screen ..."},"25":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Creatingnewproject.htm",l:-1,t:"Creating a New Project",i:0.00470041144277917,a:"In COSYM, a project holds all models and contains the complete simulation configuration. Therefore, a new project needs to be created. To create a new project Click   to create a new COSYM project. \"Create a new project\" dialog box is opened. Assign a name for your project in the \"Name\" field.  ..."},"26":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Opening.htm",l:-1,t:"Creating a  System",i:0.00208471402675418,a:"Inside the COSYM projects, it is possible to define several systems which can contain several models in a project. Therefore, it is possible to create different systems in a same project. Here, in this tutorial example, removing the default system, creating a new system is described.  To create a ..."},"27":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/CreateVTStarget.htm",l:-1,t:"Renaming a Target",i:0.000867150578494305,a:"Simulation is being executed on a target. To simulate a system, a target should be mapped with a system. When a project is created, the default \"System\" is mapped with  \"SiL_target\" .  You can either use the default target or create a new target in the Deployment Management on the View  menu. Here, ..."},"28":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/MappingTarget.htm",l:-1,t:"Mapping a Target",i:0.000867150578494305,a:"Mapping a Target A target can be mapped to a system when the system is loaded. By default, \"SiL_target\" is mapped to a \"System\". See also Adding the Simulation Models into a System"},"29":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Importing.htm",l:-1,t:"Importing the Models",i:0.00286483720546838,a:"To proceed with creating  a simulation system, models must be imported into the library.  Initially, there are three default folders available in every newly created project. They are: Control Environment VECU  You can import the models in any of the folders above, but it is recommended that Plant ..."},"30":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Adding.htm",l:-1,t:"Adding the Simulation Models into a System",i:0.00337624918753276,a:"You can add the models into a system through \u0027Add To System\u0027 feature or you can also add by dragging and dropping it. To add the instance of the models into the SystemATS Right-click on the imported models. A context menu is displayed. Click Add To System. The models appear in the Diagram view which ..."},"31":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Connectingsimulationmodels.htm",l:-1,t:"Connecting the Models",i:0.00521440553848114,a:" Connections can be made only on the connections view.  To connect the models Go to connections view in the system tab.  Click   to show the connection creator. Click the drop-down menu on the Create icon. A context menu is displayed. Click  .  A dialog box opens which shows a suggestion for ..."},"32":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/ConfiguringOS.htm",l:-1,t:"Configuring OS",i:0.00407755094411292,a:" Simulation is being executed on a target. To simulate a system, a target should be mapped with a system. You can use the default target or you can create a new target in the Deployment Management on the View menu. The system SystemATS has  mapped with the TargetATS  to  run the simulation as shown ..."},"33":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/Build.htm",l:-1,t:"Building a System",i:0.00260012511445967,a:"Building a System To simulate a system Click   in the toolbar. The \"Select System\" dialog box is displayed. Click Build \u0026 Run to generate the code and  to start the ETAS EE in order to run  simulation experiment and view the results.  See also Viewing the Simulation Result "},"34":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_1/ViewResult.htm",l:-1,t:"Viewing the Simulation Result ",i:0.0380468200428354,a:" It is necessary to install ETAS MDA visualize the signals of the generated mf4 files that contain the simulation result. COSYM supports V7.2.11 and higher version of V7.2.XX where X is the version number. And additionally, COSYM supports V8.5.3 too. Please contact ETAS Sales Manager to install MDA. ..."},"35":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/SiL Tutorial 10.htm",l:-1,t:"Simple SiL Simulation Automated with  REST APIs",i:0.00288926380570873,a:"This demo enables a first hands-on experience of illustrating the simulation of 3-cylinder gasoline engine model using COSYM REST APIs. To demonstrate the simulation, it uses the client code which is generated in C-sharp. The two sample models are used which are listed below and these models are ..."},"36":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_6/SiL Tutorial 6.htm",l:-1,t:"Simple SiL Simulation Automated with REST APIs and ASAM XIL APIs",i:0.00127185632909046,a:"This demo enables a first hands-on experience of illustrating an idle speed controller of a 3-Cylinder gasoline engine using  adaptive time simulation (ATS) which is conducted using COSYM REST APIs and ASAM XIL APIs. To demonstrate the simulation, it uses the client code which is generated in ..."},"37":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/vNET Tutorials.htm",l:-1,t:"VNET Tutorials",i:0.000721626612340466,a:"This chapter contains the tutorials which are integrated with a C-Code simulation unit  with VNET interfaces. It uses CAN, LIN, FlexRay, Ethernet Network buses for a virtual simulation. Steps for C-Code model with VNET interface Using CAN Bus VNET Integration of C-Code Model with CAN Model VNET ..."},"38":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/SiL_Tutorial_3.htm",l:-1,t:"VNET Integration of C-Code Model with CAN Bus",i:0.00125896245637842,a:"This chapter describes an example on how to integrate a simulation unit with a VNET interface for a virtual network simulation in COSYM SiL. This example is based on C-Code model as a simulation unit. Refer to the  COSYM_V3.4.1_vNET_Guide.pdf for more details on NET APIs. Demo Projects The demo ..."},"39":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Simple_CModule_vNet_CAN.htm",l:-1,t:"About \"Simple_CModule_vNet_CAN\" Example Project",i:0.000989157390649047,a:"In this example,  a C-Code model is built with two controllers, one for sending CAN messages (CCodeModule_Tx) to the virtual CAN bus and the other for receiving the CAN messages (CCodeModule_Rx) from the virtual CAN bus. As depicted below, both the C-Code model VNET interfaces are connected to the ..."},"40":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/MultiCModule_vNet_CAN.htm",l:-1,t:"About \"MultiCModule_vNet_CAN\" Example Project",i:0.000989157390649047,a:"In this example,  2 C-Code models communicate with each other via CAN bus. C-Code model is built with two vNet controllers; CCodeModule_Tx1 for sending CAN messages during even step  CCodeModule_Tx2 for sending the CAN messages during odd step. CCode_RX has 2 vNet controllers;   CCode_RX1 and ..."},"41":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/SimulationCOSYM.htm",l:-1,t:"Steps for C-Code model with VNET interface Using CAN Bus",i:0.0022106724463115,a:"You can either execute the demo projects shipped by COSYM in your system or create your own project. In the  subsequent sections explain how the demo project, \"Simple_CModule_vNet_CAN\" is created by following the  step-by-step instructions. Simulation Models A C-Code model uses a CAN bus which is ..."},"42":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Launchingt.htm",l:-1,t:"Launching COSYM",i:0.00187273876120583,a:"COSYM can be launched as follows: To launch the COSYM Product Go to Desktop and then double-click  . \u003cOr\u003e Go to Windows icon → ETAS → ETAS COSYM and then click  COSYM V3.4.1.  Read the \"ETAS Safety Advice\" document and click Acknowledged. Splash screen is displayed as shown in the  . Launching COSYM ..."},"43":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Creatingnewproject.htm",l:-1,t:"Creating a New Project",i:0.0124840253245742,a:"In COSYM, a project holds all models and contains the complete simulation configuration. Therefore, a new project needs to be created. To create a new project Click   to create a new COSYM project. The \"Create a new project\" dialog box is opened where you can assign a name for your project and click ..."},"44":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Opening_a_system.htm",l:-1,t:"Opening a System",i:0.00199212267089823,a:"Inside a COSYM project, it is possible to define several systems which can contain several models. Therefore, it is possible to create different systems in one and the same project. You can either use the default system \"System\" or create a new system with the user defined name. Here, in this ..."},"45":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/MappingTarget.htm",l:-1,t:"Mapping a Target",i:0.0010768212818186,a:"Mapping a Target A target can be mapped to a system when the system is loaded. By default,  \"SiL_target\"  is mapped to a \"System\". See also Adding the Simulation Model into a System"},"46":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/C_model_creation.htm",l:-1,t:"Creating a C-Code Model",i:0.0010768212818186,a:"To proceed with creating a C-Code model, the model can be created inside the library.  Initially, there are three default folders available in every newly created project. They are: Control Environment VECU  You can create a model in any of the folders or create sub-folders in the library. To create ..."},"47":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Enabling Communication with vNET.htm",l:-1,t:"Enabling Communication with VNET",i:0.000909534600226925,a:"Click on the CCodeModule model tab in the dashboard. CCodeModule model dashboard Double-click on options.cmake file in the \"Properties\" view. The options.cmake file is opened in the default text editor if the default text editor is mapped already. Else, a dialog box is displayed where you can choose ..."},"48":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/DescriptionsmodelControllersconfig.htm",l:-1,t:"Descriptions for the bus and controller properties in the modelControllers.config File",i:0.000721626612340466,a:"Descriptions for the bus and controller properties in the  modelControllers.config File"},"49":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Adding.htm",l:-1,t:"Adding the Simulation Model into a System",i:0.00435644379263431,a:"You can add a model into a system through Add To System feature or you can also add by dragging and dropping it.  A model can be added only when a system is opened and it is selected in the project dashboard. To add the instance of the C-Code model into the a system Right-click on the created C-Code ..."},"50":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/ConfiguringOS.htm",l:-1,t:"Configuring OS",i:0.00187273876120583,a:" Simulation is being executed on a target. The \"System\" has  mapped with \"SiL_target\"  to  run the simulation.  Here, in this tutorial example, the \"Automapping\" feature of COSYM is used to configure the OS. To perform the mapping of processes to tasks using Auto mapping feature Go to \"Deployment\" ..."},"51":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/Build.htm",l:-1,t:"Building a System",i:0.00187273876120583,a:"To build a system Click   in the toolbar. \"Select System\" dialog box is displayed. Select the system and click Build and Run. Generates the code and  starts the ETAS EE in order to map the controller, run the simulation experiment, and view the simulation results.  See also Communicating with Bus in ..."},"52":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_3/sample_code.htm",l:-1,t:"Communicating with Bus in ETAS EE",i:0.0238281434827767,a:"When you click Build and Run in COSYM, a workspace is opened in ETAS EE.   If the ETAS EE does not show any ports created in COSYM, then follow the steps below. Expand SIL under \"All Asam\" tab (Left side panel below the Workspace Elements). Select the required ports which are to be viewed, then drag ..."},"53":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/SiL_Tutorial_4.htm",l:-1,t:"VNET Integration of C-Code Model with CAN Model",i:0.00121435267462064,a:"Demo Project The demo project gives an hands on experience on how to  integrate a simulation unit with a VNET interface for a virtual network simulation in COSYM SiL. The demo project, CCodeModule_CanModule_vNet is available  in the COSYM demo data location  ( COSYM Demo Data ). When you unzip the ..."},"54":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Seamless_4.htm",l:-1,t:"About \"CCodeModule_CanModule_vNet\" Example Project",i:0.00481059945684117,a:"In this example, a CAN model and a C-Code model are used to simulate CAN communication. Each of the simulation units have two controllers connected to two different virtual buses as shown in the  Fig. 1 . The Virtual Loopback  The C-Code model receives CAN messages (Bus 2) from the CAN model and ..."},"55":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/SimulationCOSYM.htm",l:-1,t:"Steps for Integration of C-Code with CAN Model via VNET Interface",i:0.00123772893948834,a:"You can either execute the demo project shipped by COSYM in your system or create your own project. In the  subsequent sections explain how the demo project, \"CCodeModule_CanModule_vNet\" is created by following the step-by-step instructions below. Simulation Models In this example, a C-Code model ..."},"56":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Launchingt.htm",l:-1,t:"Launching COSYM",i:0.00143797655084968,a:"COSYM can be launched as follows: To launch COSYM Go to Desktop and then double-click  . \u003cOr\u003e In Windows 10 systems, go to Windows icon → ETAS → ETAS COSYM and then click  COSYM V3.4.1. Launching COSYM product The splash screen is shown until the application is ready to run, then the project screen ..."},"57":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Creatingnewproject.htm",l:-1,t:"Creating a New Project",i:0.00082683401873017,a:"In COSYM, a project holds all models and contains the complete simulation configuration. Therefore, a new project needs to be created. To create a new project Click   to create a new COSYM project. \"Create a new project\" dialog box is opened. Assign a name for your project.  Click Browse to select ..."},"58":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Opening_a_system.htm",l:-1,t:"Opening a System",i:0.00152964528638415,a:"Inside a COSYM project, it is possible to define several systems which can contain several models. Therefore, it is possible to create different systems on a  same project. You can either use the default system \"System\" or create a new system with the user defined name. Here, in this example, the ..."},"59":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/C_model_creation.htm",l:-1,t:"Creating a C-Code Model",i:0.00082683401873017,a:"To proceed with creating a C-Code model, the model can be created inside the library.  Initially, there are three default folders available in every newly created project. They are: Control Environment VECU  You can create a model in any of the folders or create sub-folders in the library. To create ..."},"60":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/EnablingvNET.htm",l:-1,t:"Enabling Communication with VNET",i:0.00082683401873017,a:"Click on the CCodeModule model tab in the dashboard. CCodeModule model dashboard Define a default text editor for the options.cmake file. The options.cmake file is opened in the default text editor if the default text editor is mapped already. Else, a dialog box is displayed where you can choose a ..."},"61":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/modelControllersconfig.htm",l:-1,t:"Descriptions for the bus and controller properties in the modelControllers.config",i:0.000721626612340466,a:"Descriptions for the bus and controller properties in the modelControllers.config"},"62":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/optionCMake.htm",l:-1,t:"options.cmake",i:0.000721626612340466,a:"Copy # common and overall compiler options (optimization, warning, debugging, ...) if(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")     set (EX_CFLAGS) elseif(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")     set (EX_CFLAGS) endif()   # C++ language compiler options ..."},"63":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/CAN_model_creation.htm",l:-1,t:"Creating a CAN Restbus Model",i:0.00082683401873017,a:"You can create a CAN model in any of the folders (Control/Environment/VECU) or create sub-folders in the library. To create a CAN model Perform one of the following steps: Go to File menu → New → Model. \u003cOr\u003e Right-click on any of the folder (Environment/Control/VECU)/sub-folders in the library. ..."},"64":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Adding.htm",l:-1,t:"Adding the Simulation Models into a System",i:0.00282984861915868,a:"You can add the models into a system through Add To System feature or you can also add by dragging and dropping it.  A model can be added only when a system is opened and it is selected in the project dashboard. To add the instances of the models into the a system Right-click on the created C-Code ..."},"65":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/ConfiguringOS.htm",l:-1,t:"Configuring OS",i:0.00143797655084968,a:" Simulation is being executed on a target. The \"System\" has  mapped with \"SiL_target\"  to  run the simulation.  Here, in this tutorial example, the \"Automapping\" feature of COSYM is used to configure the OS. To perform the mapping of processes to tasks using Auto mapping feature Go to \"Deployment\" ..."},"66":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/Build.htm",l:-1,t:"Building a System",i:0.00143797655084968,a:"Building a System To build a system Click   in the toolbar. \"Select System\" dialog box is displayed. Click Build and Run. Generates the code and  start the ETAS EE in order to map the controller, run the simulation experiment and view the results.  See also Viewing the Simulation Result "},"67":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_4/sample_code.htm",l:-1,t:"Communicating with CAN restbus model in ETAS EE",i:0.00551192204609389,a:"When you click Build and Run in COSYM, a workspace is opened in ETAS EE.   If the ETAS EE does not show any ports created in COSYM, then follow the steps below. Expand SIL under \"All Asam\" tab (left side panel below the \u0027Workspace Elements\u0027) Select the required ports which are to be viewed, then ..."},"68":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_7/SiL Tutorial 7.htm",l:-1,t:"VNET Integration of  C-Code Model with LIN Bus",i:0.00121435267462064,a:"This tutorial explains how to configure and integrate C-Code models with VNET LIN Bus.  For more detailed description about VNET APIs, please refer to  COSYM_V3.4.1_vNET_Guide.pdf. Demo Projects The demo project gives an hands on experience on how to  integrate a simulation unit with a VNET ..."},"69":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_7/SingleLIN.htm",l:-1,t:"About \"Simple_CModule_vNet_LIN\" Example Project",i:0.000979677775914401,a:"In this example, you can create a single C-Code model with interfaces. The master interface acts as a slave and responds to its own requests communicating via LIN. It is called Lin_master_slave. In the  example,  a C-Code model is built with two controllers, LIN:0 acting as combined master and slave ..."},"70":{y:0,u:"../Resources/Topic/User_Guide/4_SiL/Tutorial_7/MultipleLIN.htm",l:-1,t:"About \"MultiSlaveCModule_vNet_LIN\" Example Project",i:0.00653077714442834,a:"In this example, 2 C-Code models communicate with each other via LINBus1. Lin_master has 2 LIN interfaces LIN:0 (Master) and LIN:1 (Slave). Lin_slave1 has 1 LIN interface LIN:2 (Slave). These LIN interfaces communicate as depicted in the  Fig. 1  and in the  Tab. 1 . The LIN interface Schedule table ..."},});