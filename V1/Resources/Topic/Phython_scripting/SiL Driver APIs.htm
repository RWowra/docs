<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="_Skins_HTML5_Side" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="COSYM_Online_Help.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Python Bindings|[%=System.LinkedTitle%]">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon_3.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_2.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_1.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon.ico" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>SiL Driver APIs</title>
        <link href="../../TableStyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../TableStyles/table2.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Stylesheets/ETAS_flare_EN.css" rel="stylesheet" type="text/css" />
        <meta name="Product" content="COSYM" />
        <meta name="Version" content="V3.4.1" />
        <meta name="Revision" content="R01 EN - 05.2024" />
        <meta name="Copyright Year" content="2024" />
        <meta name="Doc Type" content="User Guide" />
        <script src="../../Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-left" role="navigation" id="offCanvas" data-off-canvas="" data-position="left" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Help.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div id="mc-main-content" role="main" data-mc-content-body="True">
                                    <h2>SiL Driver APIs</h2>
                                    <p class="paragraph">In the SiL Driver APIs, the following classes are available.</p>
                                    <ul>
                                        <li>ScalarBuffer class</li>
                                        <li>ModelLoader class</li>
                                        <li>ExternalModel class</li>
                                        <li>SignalGroup class</li>
                                        <li> SimHandle class</li>
                                    </ul>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 184px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 397px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 406px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 385px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-weight: bold;">Python API</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-weight: bold;">Description</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-weight: bold;">Parameters</th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1" style="font-weight: bold;">Return Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">convert_cdata</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Converts the C data to Python and returns it.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">1) data: address/ c void pointer&#160; &#160; <br /> data received in write callback</p>
                                                    <p class="table_default">2) baseDataType: enum</p>
                                                    <p class="table_default">&#160; &#160; &#160; &#160; type received in write callback<br />3) isArray: bool</p>
                                                    <p class="table_default">&#160; &#160; &#160; &#160; true for arrays</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">python data: can be int/float/bool etc.</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">get_scalar_buffer</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">Returns an instance of ScalarBuffer class(which creates and manages a buffer) of specified type.</p>
                                                    <p class="table_default">Use ScalarBuffer instance to call set_value()/get_value() to write to/read from buffer.</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">baseDataType: enum</p>
                                                    <p class="table_default"> this type represents C/C++ fundamental types</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">ScalarBuffer  instance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3 style="page-break-before: always;">ScalarBuffer  Class</h3>
                                    <p class="paragraph">Manages a buffer of scalar type</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 113px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 195px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 188px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 259px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Python API</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Description</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Parameters</th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1" style="font-family: Roboto;">Return Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">&#160; &#160; &#160;set_value</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">writes value to buffer</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">value of buffer type</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">none</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">&#160; &#160;get_value</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">reads value from buffer</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">value of buffer type</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>set_import_timeout and get_model_loader APIs</h3>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 185px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 307px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 324px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 402px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Python API</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Description</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Parameters</th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1" style="font-family: Roboto;">Return Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">set_import_timeout</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Sets timeout in milliseconds for loading exported module data from SiL</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">time_ms: int</p>
                                                    <p class="table_default"> time in milliseconds</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, <br />ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">get_model_loader</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">Gets ModelLoader instance</td>
                                                <td class="TableStyle-table2-BodyB-Column1-Body1">loader key/name: str</td>
                                                <td class="TableStyle-table2-BodyA-Column1-Body1">ModelLoader instance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3 style="page-break-before: always;">ModelLoader  Class</h3>
                                    <p class="paragraph">ModelLoader represents a loader (process) in COSYM simulation. Every Loader can contain multiple model instances and should run in a separate process. The loader parses <span class="code">ModelLoader.config</span> and identifies the models that needs to be loaded.</p>
                                    <p class="paragraph">The loader parses <span class="code">SimulationConfiguration.bin</span> and identifies the location of the models&#160;along with their architecture and the scheduling configuration of the models. The loader then invokes the adapter to load the models.&#160;</p>
                                    <p class="paragraph">This class exposes following functionalities. You can get model name, number of models, simulation status,&#160;loader status, run loader in async/sync mode, reset loader etc.</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 225px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 377px;" />
                                        <col class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 387px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Python API</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Description</th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1" style="font-family: Roboto;">Parameters</th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1" style="font-family: Roboto;">Return Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">close_sil_loader</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Resets loader instance</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> is_loader_running</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets model loader status</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">loader status: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> is_simulation_running</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets simulation status</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">simulation status: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> run_loader_async</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Runs model loader in async state.&#160;Simulation loop runs in background till terminated/disconnected.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> run_loader_sync</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Runs model loader in sync/blocking mode, till simulation is terminated/disconnected.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> get_number_of_models</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets number of models from the loader</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">number of models: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_model_name</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets model name using model index</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">model index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">model name: str</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> get_model_by_name</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets the ExternalModel &#160;instance using name</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">model name: str</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">ExternalModel instance</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">get_model_by_index</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">Gets the ExternalModel &#160;instance using index</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">model index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">ExternalModel&#160;instance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>ExternalModel Class&#160;</h3>
                                    <p class="paragraph">Externall Model represents a model in COSYM system that is configured to run externally. This model will be run by the COSYM in every step and exposes the following functionalities.</p>
                                    <p class="paragraph">You can set callbacks, to be called during init, exit, step, read, and write operations. And also, you can set buffer for variables, get last simulation time, number of sync tasks,&#160;task index rate, variable id, signal group, etc.</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 208px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 338px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 298px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 296px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_default" style="font-weight: bold;">Python API</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_default" style="font-weight: bold;">Description</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head"><b>Parameters</b>
                                                    </p>
                                                </th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1">
                                                    <p class="table_default" style="font-weight: bold;">Return Value</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_last_simulation_time</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets async last simulation time in microseconds.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">
                                                    <p class="table_default">time: int</p>
                                                    <p class="table_default">simulation time in microseconds</p>
                                                </td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_number_of_sync_tasks</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets number of sync tasks.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">number of sync tasks: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_task_index_rate</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets task index rate.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">task index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">task index rate: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1"> set_init_callback</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Sets init callback, which will be called during start simulation.</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">function with following signature  <br />fn()</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">set_exit_callback</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Sets exit callback, which will be called during stop simulation.</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">function with following signature<br />fn()</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">set_step_callback</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Sets step callback, which will be called during model step operation.</p>
                                                    <p class="table_default">function_name will be received as python bytes object, hence need to be decoded like following.&#160; &#160; &#160; &#160; &#160; &#160; name = function_name.decode()</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">function with following signature</p>
                                                    <p class="table_default"> fn(function_name, simulation_time, raster_us)</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">set_write_callback</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Sets variable set callback, which will be called during write operation.</p>
                                                    <p class="table_default">variable_name will be received as python bytes object, hence need to be decoded like following.&#160; &#160; &#160; &#160; &#160; &#160; name = variable_name.decode()</p>
                                                    <p class="table_default">Also, data received needs to be converted to python type using convert_cdata() API.</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">function with following signature&#160; <br />fn(variable_name, datatype, data, size)</td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1"> set_read_callback</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Sets variable get callback, which will be called during read operation.</p>
                                                    <p class="table_default">variable_name will be received as python bytes object, hence need to be decoded like following.&#160; &#160; &#160; &#160; &#160; &#160; name = variable_name.decode()</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">function with following signature</p>
                                                    <p class="table_default">fn(variable_name, datatype, data, size)</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1"> get_variable_id</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Gets variable id using name.</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">variable name: str</td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">variable id: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td class="TableStyle-table2-BodyE-Column1-Body1"> set_variable_buffer</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">Sets buffer for variable using variable id/variable name.</td>
                                                <td class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">1) variable: str/int&#160; &#160; &#160; &#160; <br />variable name/variable id</p>
                                                    <p class="table_default">2) buffer: int/ float/ numpy array of int/float<br />For arrays, pass a variable initialized with numpy array.Later, this buffer can be accessed like regular array(eg: buffer[0]) For scalar types pass 0 or temp variable.</p>
                                                    <p class="table_default">3) buffer_instance: ScalarBuffer instance</p>
                                                    <p class="table_default">This can be acquired using get_scalar_buffer().&#160;This is optional for arrays.</p>
                                                </td>
                                                <td class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">get_signal_group</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">Gets SignalGroup instance for inport/outport</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">filter: int constant&#160; &#160; <br />set SGInport for inports&#160; or</p>
                                                    <p class="table_default"> &#160; &#160; SGOutport for outports</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">SignalGroup instance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>SignalGroup Class</h3>
                                    <p class="paragraph">SignalGroup class represents either Inports or Outports group in a Model.</p>
                                    <p class="paragraph">You can get signal name, signal index, signal data type, signal size, set buffer for signals,&#160;get signal buffer, get number of signals, etc.</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 232px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 295px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 394px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 388px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Python API</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Description</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1"><b>Parameters</b>
                                                </th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1">
                                                    <p class="table_head">Return Value</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_number_of_signals</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets number of signals</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">number of signals: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_signal_index</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets signal index using signal name.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">signal name: str</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">signal index: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_signal_name</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets signal name using signal index.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">signal index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">signal name: str</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_signal_size</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets signal size using signal index.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">signal index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">signal size: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> get_signal_type</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets signal type using signal index.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">signal index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">
                                                    <p class="table_default">signal type: enum</p>
                                                    <p class="table_default"> this enum represents C/C++ fundamental types</p>
                                                </td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_signal_buffer</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets signal buffer using signal index.</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">signal index: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">signal buffer: address/ c void pointer</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1"> set_signal_buffer</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">Sets buffer for signal using signal id/signal name.</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">1) signal: int/str</p>
                                                    <p class="table_default">&#160; &#160; &#160; &#160; signal name/signal index</p>
                                                    <p class="table_default">2) buffer_instance: ScalarBuffer instance</p>
                                                    <p class="table_default"> this can be acquired using get_scalar_buffer()</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">0 on Success, ErrorCode on Failure&#160;</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>Connect to Running SiL </h3>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 212px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 421px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 205px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 368px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Python API</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Description</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1"><span style="font-family: Roboto;">Parameters</span>
                                                </th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1">
                                                    <p class="table_head">Return Value</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">connect_to_running_sil</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Connects to running simulation from third party client</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">session Id: int</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">0 on Success, ErrorCode on Failure</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_sim_handle</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets SimHandle instance</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">none</td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">SimHandle  instance</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">get_sim_handle_offline</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">Gets SimHandle instance Offline</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">deployables unzippath: str</td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">SimHandle  instance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <h3>SimHandle&#160;Class</h3>
                                    <p class="paragraph">With SimHandle class, you can retrieve information of all available&#160; inports/outports/parameters/measurement variables in a system.</p>
                                    <table style="mc-table-style: url('../../TableStyles/table2.css');margin-left: 0;margin-right: auto;" class="TableStyle-table2" cellspacing="2">
                                        <col style="width: 273px;" class="TableStyle-table2-Column-Column1" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 241px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 494px;" />
                                        <col class="TableStyle-table2-Column-Column1" style="width: 314px;" />
                                        <thead>
                                            <tr class="TableStyle-table2-Head-Header1">
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Python API</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1">
                                                    <p class="table_head">Description</p>
                                                </th>
                                                <th class="TableStyle-table2-HeadE-Column1-Header1"><span style="font-family: Roboto;">Parameters</span>
                                                </th>
                                                <th class="TableStyle-table2-HeadD-Column1-Header1">
                                                    <p class="table_head">Return Value</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">get_number_of_variables</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">Gets number of variables&#160;</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">variable type: enum<br /> any of VarInport/VarOutport/VarMeasurment/VarParam</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">number of variables: int</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> get_variable_info</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Gets an updated instance of  VariableInfo  using index.</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">1) variable type: enum</p>
                                                    <p class="table_default">&#160; &#160; any of VarInport/VarOutport/VarMeasurment/VarParam</p>
                                                    <p class="table_default">2) variable index: int</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">VariableInfo  instance&#160;</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1"> find_variable_info</td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">Gets an updated instance of  VariableInfo  &#160;using complete path of variable.</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyE-Column1-Body1">
                                                    <p class="table_default">complete path of variable: str</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyD-Column1-Body1">VariableInfo  instance&#160;</td>
                                            </tr>
                                            <tr class="TableStyle-table2-Body-Body1">
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">&#160;find_first_variable</td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">Gets an updated instance of  VariableInfo&#160;  using subpath of variable.</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyB-Column1-Body1">
                                                    <p class="table_default">1) subpath of variable: str<br />2) model_name: str</p>
                                                </td>
                                                <td colspan="1" class="TableStyle-table2-BodyA-Column1-Body1">VariableInfo  instance&#160;</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <table style="width: 100%;mc-table-style: url('../../TableStyles/note.css');" class="TableStyle-note" cellspacing="0">
                                        <col class="TableStyle-note-Column-Column1" />
                                        <thead>
                                            <tr class="TableStyle-note-Head-Header1">
                                                <th class="TableStyle-note-HeadD-Column1-Header1">
                                                    <p class="note_Header" data-mc-autonum="Note"><span class="autonumber"><span>Note</span></span>&#160;</p>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="TableStyle-note-Body-Body1">
                                                <td class="TableStyle-note-BodyA-Column1-Body1">
                                                    <p class="table_default">The 'docstrings' are added for all of the above SiL Driver APIs  and classes. <br />You can get documentation of the same using  print (&lt;API&gt;.__doc__)</p>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>