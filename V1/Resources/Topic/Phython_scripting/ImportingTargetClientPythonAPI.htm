<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="_Skins_HTML5_Side" lang="en" xml:lang="en" data-mc-search-type="Stem" data-mc-help-system-file-name="COSYM_Online_Help.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Python Bindings|[%=System.LinkedTitle%]">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon_3.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_2.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon_1.ico" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon.ico" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Creating Example File to Use TargetClient Python Model</title>
        <link href="../../Stylesheets/ETAS_flare_EN.css" rel="stylesheet" type="text/css" />
        <meta name="Product" content="COSYM" />
        <meta name="Version" content="V3.4.1" />
        <meta name="Revision" content="R01 EN - 05.2024" />
        <meta name="Copyright Year" content="2024" />
        <meta name="Doc Type" content="User Guide" />
        <script src="../../Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-left" role="navigation" id="offCanvas" data-off-canvas="" data-position="left" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Help.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div id="mc-main-content" role="main" data-mc-content-body="True">
                                    <h2>Creating Example File to Use TargetClient Python Model</h2>
                                    <p>Create a <span class="code">Sample.py</span> file in any of the text editor or python editor by referring to the mentioned steps below:</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">import</span> TargetClientPythonAPI<br /><span style="color: #a71d5d; ">from</span> time <span style="color: #a71d5d; ">import</span> sleep<br /><span style="color: #a71d5d; ">import</span> sys<br />MIN_INT = -<span style="color: #0086b3; ">2147483648</span></code></pre>
                                        </div>
                                    </div>
                                    <p class="paragraph">&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test ErrorDescription API</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">GetErrorDescription</span>(errorCode):<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> errorCode != <span style="color: #0086b3; ">0</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;retErrMSG=TargetClientPythonAPI.<span style="color: #6f42c1; ">ErrorDescription</span>(errorCode)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(retErrMSG)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">raise</span> <span style="color: #6f42c1; ">ValueError</span>(<span style="color: #df5000; ">'Exception Occurred: '</span>, retErrMSG)</code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Introduced new APIs instead of OpenSimulation()</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;ipAddress = <span style="color: #df5000; ">'localhost'</span><br />&#160;&#160;&#160;&#160;userName = <span style="color: #df5000; ">''</span><br />&#160;&#160;&#160;&#160;passWord = <span style="color: #df5000; ">''</span><br />&#160;&#160;&#160;&#160;val = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetTargetSessionAPI</span>(ipAddress,userName,passWord)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nGetTargetSessionAPI:'</span>, val) <span style="color: #969896; ">#Expected value is -1 for Local Host</span><br /><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> val == MIN_INT:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nWrong Session'</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">else</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;source = TargetClientPythonAPI.<span style="color: #6f42c1; ">Simulation_artifacts_t</span>()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;source.config_file_path = configPath<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;source.deployable_file_path = deployablePath<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = TargetClientPythonAPI.<span style="color: #6f42c1; ">DeployAPI</span>(val, source, TargetClientPythonAPI.SIL)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nDeployAPI:'</span>, val)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <p class="paragraph">&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test ControlClient APIs with newly introduced API</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ControlClientTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(<span style="color: #0086b3; ">20</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>,val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;currState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nGetCurrentSimulationState:'</span>, currState)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(currState[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">while</span> currState[<span style="color: #0086b3; ">1</span>] != TargetClientPythonAPI.networkState_eStopped:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;currState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <p class="paragraph">&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test SignalGenerator APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">createChannel</span>(sgId):<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">global</span> SimOid<br />&#160;&#160;&#160;&#160;chObj1=TargetClientPythonAPI.<span style="color: #6f42c1; ">createChannel_t</span>()<br />&#160;&#160;&#160;&#160;chObj1.chanName=<span style="color: #df5000; ">"SignalGenerator1/Signal1"</span><br />&#160;&#160;&#160;&#160;chObj1.chanNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;chObj1.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;SimOid1 = TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateSGChannel</span>(chObj1)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;SimOid=SimOid1[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(SimOid1[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> SimOid</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">setSineWaveSignal</span>(sgId):<br />&#160;&#160;&#160;&#160;sineObj=TargetClientPythonAPI.<span style="color: #6f42c1; ">setSinewaveSignal_t</span>()<br />&#160;&#160;&#160;&#160;sineObj.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;sineObj.createFlg = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;sineObj.channelNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;sineObj.intervalNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;sineObj.countMax = <span style="color: #0086b3; ">10000</span><br />&#160;&#160;&#160;&#160;sineObj.deltaT = <span style="color: #0086b3; ">3.0</span><br />&#160;&#160;&#160;&#160;sineObj.frequency = <span style="color: #0086b3; ">1.0</span><br />&#160;&#160;&#160;&#160;sineObj.phase = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;sineObj.amplitude = <span style="color: #0086b3; ">3.0</span><br />&#160;&#160;&#160;&#160;sineObj.offset = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">SetSinewaveSignal</span>(sineObj)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nsetSineWaveSignal:'</span>, retValue)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">setSineWaveSignalWithWatcher</span>(sgId):<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;stopWatcher = TargetClientPythonAPI.<span style="color: #6f42c1; ">condition_watcher_info</span>()<br />&#160;&#160;&#160;&#160;stopWatcher.lpseudoAddr =<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span>&#160;<br />&#160;&#160;&#160;&#160;stopWatcher.rpseudoAddr = <span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span><br />&#160;&#160;&#160;&#160;stopWatcher.timeoutValue = <span style="color: #0086b3; ">10000</span><br />&#160;&#160;&#160;&#160;stopWatcher.constantValue = <span style="color: #0086b3; ">5000</span><br />&#160;&#160;&#160;&#160;stopWatcher.rSignalorConstant =TargetClientPythonAPI.eCONSTANT<br />&#160;&#160;&#160;&#160;stopWatcher.trigger_condition =TargetClientPythonAPI.eEQUAL<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;watcherDescID =TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateConditionWatcherAPI</span>(stopWatcher)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nWatcherDescID:'</span>, watcherDescID)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;sineObj=TargetClientPythonAPI.<span style="color: #6f42c1; ">setSinewaveSignal_t</span>()<br />&#160;&#160;&#160;&#160;sineObj.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;sineObj.createFlg = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;sineObj.channelNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;sineObj.intervalNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;sineObj.countMax = <span style="color: #0086b3; ">10000</span><br />&#160;&#160;&#160;&#160;sineObj.deltaT = <span style="color: #0086b3; ">3.0</span><br />&#160;&#160;&#160;&#160;sineObj.frequency = <span style="color: #0086b3; ">1.0</span><br />&#160;&#160;&#160;&#160;sineObj.phase = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;sineObj.amplitude = <span style="color: #0086b3; ">3.0</span><br />&#160;&#160;&#160;&#160;sineObj.offset = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;details=TargetClientPythonAPI.<span style="color: #6f42c1; ">sg_details</span>()<br />&#160;&#160;&#160;&#160;details.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;details.channelNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;details.intervalNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">SetSignalGeneratorWatcher</span>(details, watcherDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nSetSignalGeneratorWatcher:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">SetSinewaveSignal</span>(sineObj)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nsetSineWaveSignal:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> watcherDescID</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">setDataSignal</span>(sgId):<br />&#160;&#160;&#160;&#160;dataObj=TargetClientPythonAPI.<span style="color: #6f42c1; ">setDataSignal_t</span>()<br />&#160;&#160;&#160;&#160;dataObj.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;dataObj.channelNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;dataObj.intervalNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;dataObj.createFlg = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;dataObj.countMax = <span style="color: #0086b3; ">10000</span><br />&#160;&#160;&#160;&#160;dataObj.intpolType = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;dataObj.nofSamples = <span style="color: #0086b3; ">4</span><br />&#160;&#160;&#160;&#160;dataObj.ptrValue=TargetClientPythonAPI.<span style="color: #6f42c1; ">SetDataSignalDoublePtr</span>([<span style="color: #0086b3; ">0.0</span>,<span style="color: #0086b3; ">1.0</span>,<span style="color: #0086b3; ">2.0</span>,<span style="color: #0086b3; ">3.0</span>])<br />&#160;&#160;&#160;&#160;dataObj.ptrTime=TargetClientPythonAPI.<span style="color: #6f42c1; ">SetDataSignalDoublePtr</span>([<span style="color: #0086b3; ">0.00</span>,<span style="color: #0086b3; ">0.01</span>,<span style="color: #0086b3; ">0.02</span>,<span style="color: #0086b3; ">0.03</span>])<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">SetDataSignal</span>(dataObj)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nsetDataSignal:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;TargetClientPythonAPI.<span style="color: #6f42c1; ">FreeMemory</span>(dataObj.ptrValue)<br />&#160;&#160;&#160;&#160;TargetClientPythonAPI.<span style="color: #6f42c1; ">FreeMemory</span>(dataObj.ptrTime)&#160;<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">LinkPortWithModeAPI</span>(modelAddress, SimOid, eMode, constValue):<br />&#160;&#160;&#160;&#160;ret = TargetClientPythonAPI.<span style="color: #6f42c1; ">LinkPortWithModeAPI</span>(modelAddress, SimOid, eMode, constValue)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'LinkPortWithModeAPI:'</span>, ret)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(ret[<span style="color: #0086b3; ">0</span>])</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">InitSignalGenerator</span>(sgId,deployablePath,configPath):<br />&#160;&#160;&#160;&#160;watcherDescID=<span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;SimOid=<span style="color: #6f42c1; ">createChannel</span>(sgId)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSimOid:'</span>, SimOid)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#setDataSignal(sgId)</span><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">setSineWaveSignal</span>(sgId) <span style="color: #969896; ">## Without Watcher Enabled</span>&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#watcherDescID = setSineWaveSignalWithWatcher(sgId) ## With Watcher Enabled</span>&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;timeSliceObj=TargetClientPythonAPI.<span style="color: #6f42c1; ">setTimeslice_t</span>()<br />&#160;&#160;&#160;&#160;timeSliceObj.sgId = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;timeSliceObj.createFlg = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;timeSliceObj.sliceNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;timeSliceObj.deltaT = <span style="color: #0086b3; ">300.0</span><br />&#160;&#160;&#160;&#160;timeSliceObj.startT = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;timeSliceObj.countMax = <span style="color: #0086b3; ">1000</span><br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">SetSGTimeslice</span>(timeSliceObj)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nSetSGTimeslice:'</span>, retValue)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">ResetSGInstance</span>(sgId[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'ResetSGInstance:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;modelAddress=<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">LinkPortWithModeAPI</span>(modelAddress, SimOid, eMode=<span style="color: #0086b3; ">6</span>, constValue=<span style="color: #0086b3; ">0</span>)<br /><br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSGInstance</span>(sgId[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'StartSGInstance:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(<span style="color: #0086b3; ">10</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">5</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> watcherDescID</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ExitSignalGenerator</span>(sgId):&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;retValue=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSGInstance</span>(sgId[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSGInstance:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;timeValue=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetSGTime</span>(sgId[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'GetSGTime:'</span>, timeValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(timeValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;modelAddress=<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">LinkPortWithModeAPI</span>(modelAddress, SimOid, eMode=<span style="color: #0086b3; ">1</span>, constValue=<span style="color: #0086b3; ">0</span>)<br /><br />&#160;&#160;&#160;&#160;retValue=TargetClientPythonAPI.<span style="color: #6f42c1; ">ResetSGInstance</span>(sgId[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'ResetSGInstance:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;dchObj1=TargetClientPythonAPI.<span style="color: #6f42c1; ">deleteChannel_t</span>()<br />&#160;&#160;&#160;&#160;dchObj1.chanNo = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;dchObj1.sgId = sgId[<span style="color: #0086b3; ">1</span>]<br />&#160;&#160;&#160;&#160;retValue = TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteSGChannel</span>(dchObj1)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'DeleteSGChannel:'</span>, retValue)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;retValue=TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteAllSGInstances</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retValue[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">SignalGeneratorTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;watcherDescID=<span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;msg = TargetClientPythonAPI.<span style="color: #6f42c1; ">createGeneratorInstance_t</span>()<br /><br />&#160;&#160;&#160;&#160;msg.taskIndex = <span style="color: #0086b3; ">0</span><br />&#160;&#160;&#160;&#160;msg.startTime = <span style="color: #0086b3; ">0.000</span><br />&#160;&#160;&#160;&#160;msg.channelReset = <span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;msg.sgName= <span style="color: #df5000; ">"SignalGenerator1"</span><br /><br />&#160;&#160;&#160;&#160;sgId=TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateSGInstance</span>(msg)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nsgId:'</span>,sgId)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(sgId[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;watcherDescID=<span style="color: #6f42c1; ">InitSignalGenerator</span>(sgId,deployablePath,configPath)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> watcherDescID != <span style="color: #0086b3; ">0</span> :<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteConditionWatcher</span>(watcherDescID)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nDeleteConditionWatcher:'</span>,val)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">ExitSignalGenerator</span>(sgId)</code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test Parameterization APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ParameterizationTestScalar</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;modelAddress=<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ECU_3Cyl/ECU_AS/AS_PREDICTION_THROTTLE_CTR/ECU_phiThrottleDesDel_BdcX/Unit Delay/MiL_Three_Cyl_7_ECU_P_UnitDelay_InitialCondition'</span><br />&#160;&#160;&#160;&#160;scalarData=<span style="color: #0086b3; ">15.5</span><br /><br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">WriteScalarParameter</span>(modelAddress,scalarData,TargetClientPythonAPI.eFloat64)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nWriteScalarParameter:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">ReadScalarVariable</span>(modelAddress,TargetClientPythonAPI.eFloat64)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nReadScalarVariable:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ParameterizationTestVector</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;modelAddress=<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ECU_3Cyl/ECU_IS/Ignition System (Is) Ignition Angle Calculation1/ECU_iaDelta2Opt_CUR/MiL_Three_Cyl_7_ECU_P_ECU_iaDelta2Opt_CUR_tableData'</span><br />&#160;&#160;&#160;&#160;dataArr=[<span style="color: #0086b3; ">44</span>,<span style="color: #0086b3; ">54</span>,<span style="color: #0086b3; ">64</span>,<span style="color: #0086b3; ">74</span>,<span style="color: #0086b3; ">84</span>,<span style="color: #0086b3; ">94</span>,<span style="color: #0086b3; ">104</span>,<span style="color: #0086b3; ">114</span>]<br /><br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">WriteVectorParameter</span>(modelAddress,dataArr,TargetClientPythonAPI.eFloat64)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nWriteVectorParameter:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">ReadVectorVariable</span>(modelAddress,TargetClientPythonAPI.eFloat64,<span style="color: #0086b3; ">8</span>,<span style="color: #0086b3; ">0</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nReadVectorVariable:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ParameterizationTestMultiParameter</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;modelAddress=[<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ECU_3Cyl/ECU_IS/Ignition System (Is) Ignition Angle Calculation1/ECU_iaDelta2Opt_CUR/MiL_Three_Cyl_7_ECU_P_ECU_iaDelta2Opt_CUR_bp01Data'</span>,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ECU_3Cyl/ECU_AS/AS_PREDICTION_THROTTLE_CTR/ECU_facLoadDesPre/ECU_phiThrottleFromMfNormed_CUR/MiL_Three_Cyl_7_ECU_P_ECU_phiThrottleFromMfNormed_CUR_tableData'</span>]<br />&#160;&#160;&#160;&#160;modelAddress1=<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ECU_3Cyl/ECU_AS/AS_PREDICTION_THROTTLE_CTR/ECU_facLoadDesPre/ECU_phiThrottleFromMfNormed_CUR/MiL_Three_Cyl_7_ECU_P_ECU_phiThrottleFromMfNormed_CUR_tableData'</span><br />&#160;&#160;&#160;&#160;dataArr=[[<span style="color: #0086b3; ">44.78</span>,<span style="color: #0086b3; ">54</span>,<span style="color: #0086b3; ">64</span>,<span style="color: #0086b3; ">74</span>],[<span style="color: #0086b3; ">34</span>,<span style="color: #0086b3; ">56.2</span>]]<br /><br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">WriteMultiParameter</span>(modelAddress,[TargetClientPythonAPI.eFloat64,TargetClientPythonAPI.eFloat64],dataArr)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nWriteMultiParameter:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;sizes = [<span style="color: #0086b3; ">2</span>,<span style="color: #0086b3; ">2</span>]<br />&#160;&#160;&#160;&#160;retval = TargetClientPythonAPI.<span style="color: #6f42c1; ">ReadMultipleParameter</span>(modelAddress, [TargetClientPythonAPI.eFloat64,TargetClientPythonAPI.eFloat64], sizes)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nReadMultipleParameter : '</span>, retval)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])<br /><br />&#160;&#160;&#160;&#160;retVal=TargetClientPythonAPI.<span style="color: #6f42c1; ">ReadVectorVariable</span>(modelAddress1,TargetClientPythonAPI.eFloat64,<span style="color: #0086b3; ">2</span>,<span style="color: #0086b3; ">0</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nReadVectorVariable:'</span>, retVal)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(retVal[<span style="color: #0086b3; ">0</span>])&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test DataLogger APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">DataBrokerClientTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> sys.platform == <span style="color: #df5000; ">'linux'</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataBrokerFile = <span style="color: #df5000; ">"file:///tmp/DataBrokerFile.mf4"</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">else</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataBrokerFile = <span style="color: #df5000; ">"file://C:/temp/DataBrokerFile.mf4"</span><br />&#160;&#160;&#160;&#160;modelAddressListDict = {<span style="color: #df5000; ">"TaskATS"</span>:[<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span>,<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_facLoadMf_2'</span>]}<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#modelAddressListDict = "all"</span><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">RegisterDataLogger</span>(<span style="color: #0086b3; ">2</span>, modelAddressListDict,dataBrokerFile, <span style="color: #0086b3; ">0.1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nRegisterDataLogger:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nStartLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test Condition Watcher APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">ConditionWatcherTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;dataBrokerFile = <span style="color: #df5000; ">"file://C:/temp/DataBrokerFileConditionWatcher.mf4"</span><br />&#160;&#160;&#160;&#160;modelAddressListDict = {<span style="color: #df5000; ">"TaskATS"</span>:[<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span>,<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_facLoadMf_2'</span>]}<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;startWatcher = TargetClientPythonAPI.<span style="color: #6f42c1; ">condition_watcher_info</span>()<br />&#160;&#160;&#160;&#160;startWatcher.lpseudoAddr = <span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span><br />&#160;&#160;&#160;&#160;startWatcher.rpseudoAddr = <span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_facLoadMf_2'</span><br />&#160;&#160;&#160;&#160;startWatcher.timeoutValue = -<span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;startWatcher.constantValue = <span style="color: #0086b3; ">1000</span><br />&#160;&#160;&#160;&#160;startWatcher.rSignalorConstant = TargetClientPythonAPI.eCONSTANT<br />&#160;&#160;&#160;&#160;startWatcher.trigger_condition = TargetClientPythonAPI.eGREATERTHAN<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;stopWatcher = TargetClientPythonAPI.<span style="color: #6f42c1; ">condition_watcher_info</span>()<br />&#160;&#160;&#160;&#160;stopWatcher.lpseudoAddr = <span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span><br />&#160;&#160;&#160;&#160;stopWatcher.rpseudoAddr = <span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_facLoadMf_2'</span><br />&#160;&#160;&#160;&#160;stopWatcher.timeoutValue = -<span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;stopWatcher.constantValue = <span style="color: #0086b3; ">1900</span><br />&#160;&#160;&#160;&#160;stopWatcher.rSignalorConstant = TargetClientPythonAPI.eCONSTANT<br />&#160;&#160;&#160;&#160;stopWatcher.trigger_condition = TargetClientPythonAPI.eGREATERTHAN&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;startWatcherDescID=TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateConditionWatcherAPI</span>(startWatcher)<br />&#160;&#160;&#160;&#160;stopWatcherDescID=TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateConditionWatcherAPI</span>(stopWatcher)&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;StartTriggerCondition = startWatcherDescID<br />&#160;&#160;&#160;&#160;StopTriggerCondition = stopWatcherDescID<br />&#160;&#160;&#160;&#160;PreStartTriggerInterval = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;PostStopTriggerInterval = <span style="color: #0086b3; ">5.0</span>&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">RegisterDataLogger</span>(<span style="color: #0086b3; ">2</span>, modelAddressListDict,dataBrokerFile, <span style="color: #0086b3; ">0.1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nRegisterDataLogger:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">SetDataLoggerCaptureProperties</span>(<span style="color: #0086b3; ">2</span>, StartTriggerCondition, StopTriggerCondition, PreStartTriggerInterval, PostStopTriggerInterval)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSetDataLoggerCaptureProperties:'</span>,val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nStartLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">5</span>)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\GetDataLoggerCaptureStateAPI:'</span>,val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val = TargetClientPythonAPI.<span style="color: #6f42c1; ">RemoveDataChannel</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nRemoveDataChannel:'</span>,val)&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteConditionWatcher</span>(startWatcherDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nDeleteConditionWatcher:'</span>, val)&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteConditionWatcher</span>(stopWatcherDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nDeleteConditionWatcher:'</span>, val)&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)</code></pre>
                                        </div>
                                    </div>
                                    <p>&#160;</p>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test Duration Watcher APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">DurationWatcherTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)<br /><br />&#160;&#160;&#160;&#160;dataBrokerFile = <span style="color: #df5000; ">"file://C:/temp/DataBrokerFileDurationWatcher.mf4"</span><br />&#160;&#160;&#160;&#160;modelAddressListDict = {<span style="color: #df5000; ">"TaskATS"</span>:[<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_nEng'</span>,<span style="color: #df5000; ">'MiL_Three_Cyl_7_ECU/ICE_facLoadMf_2'</span>]}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;startWatcherDescID = -<span style="color: #0086b3; ">1</span><br />&#160;&#160;&#160;&#160;stopWatcherDescID = -<span style="color: #0086b3; ">1</span>&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;time = <span style="color: #0086b3; ">200.0</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#durationWatcherDescID = -1</span><br />&#160;&#160;&#160;&#160;durationWatcherDescID=TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateDurationWatcherByTimeAPI</span>(time)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nDurationWatcherDescID:'</span>,durationWatcherDescID)<br /><br />&#160;&#160;&#160;&#160;StartTriggerCondition = startWatcherDescID<br />&#160;&#160;&#160;&#160;StopTriggerCondition = durationWatcherDescID<br />&#160;&#160;&#160;&#160;PreStartTriggerInterval = <span style="color: #0086b3; ">0.0</span><br />&#160;&#160;&#160;&#160;PostStopTriggerInterval = <span style="color: #0086b3; ">5.0</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">RegisterDataLogger</span>(<span style="color: #0086b3; ">2</span>, modelAddressListDict,dataBrokerFile, <span style="color: #0086b3; ">0.1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nRegisterDataLogger:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">SetDataLoggerCaptureProperties</span>(<span style="color: #0086b3; ">2</span>, StartTriggerCondition, StopTriggerCondition, PreStartTriggerInterval, PostStopTriggerInterval)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSetDataLoggerCaptureProperties:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nStartLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopLoggingOnChannel</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopLoggingOnChannel:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">5</span>)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)<br /><br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetDataLoggerCaptureStateAPI</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetDataLoggerCaptureStateAPI:'</span>,val)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val = TargetClientPythonAPI.<span style="color: #6f42c1; ">RemoveDataChannel</span>(<span style="color: #0086b3; ">2</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nRemoveDataChannel:'</span>,val)&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteDurationWatcher</span>(durationWatcherDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nDeleteDurationWatcher:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /></code></pre>
                                        </div>
                                    </div>
                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                        <div class="codeSnippetCaption">
                                            <p>Test Break Point APIs</p>
                                        </div>
                                        <div style="mc-code-lang: Python;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">def</span> <span style="color: #6f42c1; ">BreakPointTest</span>(deployablePath,configPath):<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">DownloadSimulation</span>(deployablePath,configPath)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;breakpointState1 = TargetClientPythonAPI.eSTOP<br />&#160;&#160;&#160;&#160;breakpointState2 = TargetClientPythonAPI.ePAUSE<br />&#160;&#160;&#160;&#160;time=<span style="color: #0086b3; ">50</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#step=500&#160;&#160;&#160;&#160;</span><br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;watcherDescID =TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateDurationWatcherByTimeAPI</span>(time)<br />&#160;&#160;&#160;&#160;<span style="color: #969896; ">#watcherDescID =TargetClientPythonAPI.CreateDurationWatcherByStepAPI(step)</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nWatcherDescID:'</span>,watcherDescID)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\n--------Breakpoint Execution FOR STOP STATE--------'</span> )&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;breakpointDescID = TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateBreakpointAPI</span>(watcherDescID, breakpointState1)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nBreakpointDescID for eSTOP:'</span>,breakpointDescID)<br />&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val= TargetClientPythonAPI.<span style="color: #6f42c1; ">SetBreakpoint</span>(breakpointDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSetBreakpoint:'</span>,val)<br />&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">while</span> <span style="color: #a71d5d; ">True</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetSimulationTime</span>()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetSimulationTime:'</span>,val[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;simulationState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSimulationState:'</span>,simulationState)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> (simulationState[<span style="color: #0086b3; ">1</span>]==TargetClientPythonAPI.networkState_eStopped):<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">break</span><br />&#160;&#160;&#160;&#160;val= TargetClientPythonAPI.<span style="color: #6f42c1; ">GetBreakpointAPI</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetBreakpointAPI:'</span>,val)&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;simulationState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(simulationState[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSimulationState:'</span>,simulationState)&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val= TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteBreakpoint</span>(breakpointDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nDeleteBreakpoint:'</span>,val)<br /><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\n--------Breakpoint Execution FOR PAUSE STATE--------'</span> )&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;breakpointDescID = TargetClientPythonAPI.<span style="color: #6f42c1; ">CreateBreakpointAPI</span>(watcherDescID, breakpointState2)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nBreakpointDescID for ePAUSE:'</span>,breakpointDescID)<br />&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val= TargetClientPythonAPI.<span style="color: #6f42c1; ">SetBreakpoint</span>(breakpointDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSetBreakpoint:'</span>,val)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StartSimulation</span>(-<span style="color: #0086b3; ">1</span>)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStartSimulation:'</span>, val)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">while</span> <span style="color: #a71d5d; ">True</span>:<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">sleep</span>(<span style="color: #0086b3; ">10</span>)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">GetSimulationTime</span>()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nGetSimulationTime:'</span>,val[<span style="color: #0086b3; ">1</span>])<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;simulationState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSimulationState:'</span>,simulationState)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">if</span> (simulationState[<span style="color: #0086b3; ">1</span>]==TargetClientPythonAPI.networkState_ePaused):<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">break</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;simulationState = TargetClientPythonAPI.<span style="color: #6f42c1; ">GetCurrentSimulationState</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(simulationState[<span style="color: #0086b3; ">0</span>])<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nSimulationState:'</span>,simulationState)&#160;&#160;&#160;&#160;<br /><br />&#160;&#160;&#160;&#160;val = TargetClientPythonAPI.<span style="color: #6f42c1; ">ResumeSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nResumeSimulation : '</span>,val)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br /><br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">StopSimulation</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nStopSimulation:'</span>, val)<br />&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val= TargetClientPythonAPI.<span style="color: #6f42c1; ">DeleteBreakpoint</span>(breakpointDescID)<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span>(<span style="color: #df5000; ">'\nDeleteBreakpoint:'</span>,val)<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;val=TargetClientPythonAPI.<span style="color: #6f42c1; ">UnDeploy</span>()<br />&#160;&#160;&#160;&#160;<span style="color: #6f42c1; ">GetErrorDescription</span>(val)<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">print</span> (<span style="color: #df5000; ">'\nUnDeploy:'</span>, val)</code></pre>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>